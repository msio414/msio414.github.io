@use 'sass:map';
@use 'global' as *;
@use 'mixins' as *;

*, *::before, *::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
html, body, main, nav, header, footer {
    width:100%;
}
html {
    -webkit-text-size-adjust: 100%;
    scroll-behavior: smooth;
    scroll-padding-top: 2.75rem;
    overflow-x: hidden;
    height: 100dvh;
}

body {
    line-height: 1.6;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    color: var(--fg-color-primary);
    background: var(--bg-color-primary);
    transition: all .3s ease;
    overflow-x: hidden;
}
main {
    flex: 1;
    gap: 1rem;
    margin: auto;
    display: flex;
    flex-direction: column;
}
sub, sup {
    font-size: 70%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
}
small {
    font-size: 80%;
}
button, input { overflow: visible; }
button, select { text-transform: none; }
button, input, optgroup, select, option, textarea {
    font-family: inherit;
    font-size: 100%;
    color: inherit;
    background: inherit;
    line-height: 1.15;
    margin: 0;
}
button, [type="button"], [type="reset"], [type="submit"] {
    -webkit-appearance: button;
}
button {
    all: unset;
    cursor: pointer;
    font-weight: 600;
    font-family: $font-jura;
}
input, textarea {
    width: 100%;
    padding: .75rem;
    border-radius: .5rem;
    transition: border-color .3s ease;
    &:focus {
        outline: none;
        border-color: var(--accent-color-secondary);
    }
}
textarea {
    resize: vertical;
    min-height: 9rem;
}
span {
    font-weight: normal;
}
a {
    cursor: pointer;
    text-decoration: none;
    transition: all .3s ease;
    color: var(--accent-color-primary);
    &:hover {
        color: var(--hover-color-primary);
    }
}
i {
    cursor: pointer;
    padding: .5rem .25rem;
    color: var(--accent-color-primary);
    &:hover {
        transform: scale(1.05);
    }
}
em {
    font-style: italic;
    font-weight: 500;
    background: var(--bg-color-primary);
}
ol, ul {
    list-style: none;
    li {
        margin: auto .875rem;
        font-family: $font-space;
    }
}
h1, h2, h3, h4 {
    line-height: 1.2;
    margin-bottom: 1rem;
}
h1 {
    font-weight: 700;
    font-family: $font-orbitron;
}
h2, h3 {
    font-weight: 600;
    font-family: $font-space;
}
h4, h5, h6 {
    font-weight: 500;
    font-family: $font-jura;
}
p, main, body, footer {
    font-weight: 400;
    font-family: $font-plex;
}
//$base-font-sizes: (
        //p:  (min: 1.1rem, max: 1.3rem),
        //h1: (min: 2.5rem, max: 3.5rem),
        //h2: (min: 2.0rem, max: 2.5rem),
        //h3: (min: 1.3rem, max: 1.8rem),
        //h4: (min: 1.3rem, max: 1.7rem),
        //h5: (min: 1.2rem, max: 1.5rem),
        //h6: (min: 1.1rem, max: 1.4rem));

$base-font-sizes: (
        p:  (min: 0.9rem, max: 1.1rem),
        h1: (min: 2.0rem, max: 2.7rem),
        h2: (min: 1.5rem, max: 2.0rem),
        h3: (min: 1.3rem, max: 1.7rem),
        h4: (min: 1.1rem, max: 1.5rem),
        h5: (min: 1.0rem, max: 1.3rem),
        h6: (min: 0.8rem, max: 1.1rem)
);

@each $tag, $sizes in $base-font-sizes {
    $min: map.get($sizes, min);
    $max: map.get($sizes, max);
    #{$tag} {
        @include font-size($min, $max);
    }
}

[hidden], [type="hidden"] {
    display: none;
}
